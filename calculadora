import abc
from unittest import TestCase, main

class Calculadora (object):

  def calcular(self, n1, n2, operador):
  operacaoFab = OperacaoFab()
  operacao = operacaoFab.criar(operador)
  if (operacao == None):
    return 0
  else:
    resultado = operacao.executar(n1,n2)
    return resultado

class OperacaoFab(object):

  def criar(self, operador):
    if (operador == "soma"):
      return Soma()
    elif (operador == "subtracao"):
      return Subtracao()
    elif (operador == "divisao"):
      return Divisao()
    elif (operador == "multiplicacao"):
      return Multiplicacao()
      
class Operacao(metaclass=abc.ABCMeta):

  @abc.abstractmethod
  def executar(self, n1,n2):
    pass
    
class Soma (Operacao):
  def executar (self,n1,n2):
    resultado = n1 + n2
    return resultado
    
class Subtracao (Operacao):
  def executar (self,n1,n2):
    resultado = n1 - n2
    return resultado
    
class Divisao (Operacao):
  def executar (self,n1,n2):
    resultado = n1 / n2
    return resultado

class Multiplicacao (Operacao):
  def executar (self,n1,n2):
    resultado = n1 * n2
    return resultado
    
class Testes (TestCase):

  def test_soma(self):
  calculador = Calculadora()
  result = calculador.calcular(5,6, "soma")
  self.assertEqual(result, 11)
